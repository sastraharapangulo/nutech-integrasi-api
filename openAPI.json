{
  "openapi": "3.0.3",
  "info": {
    "title": "API Contract SIMS PPOB",
    "description": "Documentation for Take Home Test API - Sastra harapan Gulo",
    "version": "1.0"
  },
  "servers": [
    {
      "url": "https://127.0.0.1:3000/api/v1/api-docs",
      "description": "Development Server"
    }
  ],
  "paths": {
    "/registration": {
      "post": {
        "tags": ["1. Module Membership"],
        "description": "<b>API Registration Public (Tidak perlu Token untuk mengaksesnya)</b>\n\nDigunakan untuk melakukan registrasi User agar bisa Login ke dalam aplikasi.\n\nKetentuan:\n\n- Parameter request <b>email</b> harus terdapat validasi format email.\n- Parameter request <b>password</b> length minimal 8 karakter.\n- Handling Response sesuai dokumentasi Response di bawah.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "description": "Email dari user",
                    "example": "user@nutech-integrasi.com"
                  },
                  "first_name": {
                    "type": "string",
                    "description": "First Name dari user",
                    "example": "User"
                  },
                  "last_name": {
                    "type": "string",
                    "description": "Last Name dari user",
                    "example": "Nutech"
                  },
                  "password": {
                    "type": "string",
                    "description": "Password dari user",
                    "example": "abcdef1234"
                  }
                },
                "required": ["email", "first_name", "last_name", "password"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Request Successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "description": "Internal Status Code",
                      "example": 0
                    },
                    "message": {
                      "type": "string",
                      "description": "Description for Internal Status Code",
                      "example": "Registrasi berhasil silahkan login"
                    },
                    "data": {
                      "type": "boolean",
                      "example": null
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "description": "Internal Status Code",
                      "example": 102
                    },
                    "message": {
                      "type": "string",
                      "description": "Description for Internal Status Code",
                      "example": "Parameter email tidak sesuai format"
                    },
                    "data": {
                      "type": "boolean",
                      "example": null
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/login": {
      "post": {
        "tags": ["1. Module Membership"],
        "description": "<b>API Login Public (Tidak perlu Token untuk mengaksesnya)</b>\n\nDigunakan untuk melakukan login dan mendapatkan authentication berupa JWT (Json Web Token).\n\nKetentuan:\n\n- Parameter request <b>email</b> harus terdapat validasi format email.\n- Parameter request <b>password</b> minimal 8 karakter.\n- <b>JWT</b> yang digenerate harus memuat payload <b>email</b> dan di set <b>expiration</b> selama 12 jam dari waktu di generate.\n- Handling Response sesuai dokumentasi Response di bawah.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "description": "Email dari user yang telah diregistrasi",
                    "example": "user@nutech-integrasi.com"
                  },
                  "password": {
                    "type": "string",
                    "description": "Password dari user yang telah diregistrasi",
                    "example": "abcdef1234"
                  }
                },
                "required": ["email", "password"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Berhasil Login",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "description": "Internal Status Code",
                      "example": 0
                    },
                    "message": {
                      "type": "string",
                      "description": "Description for Internal Status Code",
                      "example": "Login Sukses"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "token": {
                          "type": "string",
                          "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJkYXRhIjoiNTRVdXRjYTdCS0ZPX0ZUZGZ1bXlJem9zSTRKa1VxUGZVZ0ROSTUwelRTQlo2aHoyY0hKZ1VMb1loM09HUUd0ekQxV3dTX194aHBNZTE2SGFscVRzcEhjS21UclJ3S2FYYmZob3AzdzFFUHJ2NFdBQmk1c0RpdV9DSnZTSWt2MDFTbEU0QU5pbVB0bUx5azZoUzlOalVQNEZaVVpfRVBtcEk4Y3pNc3ZWa2JFPSIsImlhdCI6MTYyNjkyODk3MSwiZXhwIjoyNTU2MTE4Nzk4fQ.9C9NvhZYKivhGWnrjo4Wr1Rv-wur1wCm0jqfK9XDD8U"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "description": "Internal Status Code",
                      "example": 102
                    },
                    "message": {
                      "type": "string",
                      "description": "Description for Internal Status Code",
                      "example": "Parameter email tidak sesuai format"
                    },
                    "data": {
                      "type": "boolean",
                      "example": null
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "description": "Internal Status Code",
                      "example": 103
                    },
                    "message": {
                      "type": "string",
                      "description": "Description for Internal Status Code",
                      "example": "Username atau password salah"
                    },
                    "data": {
                      "type": "boolean",
                      "example": null
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/profile": {
      "get": {
        "tags": ["1. Module Membership"],
        "description": "<b>API Profile Private (Memerlukan Token untuk mengaksesnya)</b>\n\nDigunakan untuk mendapatkan informasi profil User.\n\nKetentuan:\n\n- Service ini harus menggunakan <b>Bearer Token JWT</b> untuk mengaksesnya.\n- Tidak ada parameter email di query param URL ataupun request body, karena email diambil dari payload JWT yang didapatkan dari hasil login.\n- Handling Response sesuai dokumentasi Response di bawah.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Request Successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "description": "Internal Status Code",
                      "example": 0
                    },
                    "message": {
                      "type": "string",
                      "description": "Description for Internal Status Code",
                      "example": "Sukses"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "email": {
                          "type": "string",
                          "example": "user@nutech-integrasi.com"
                        },
                        "first_name": {
                          "type": "string",
                          "example": "User"
                        },
                        "last_name": {
                          "type": "string",
                          "example": "Nutech"
                        },
                        "profile_image": {
                          "type": "string",
                          "example": "https://yoururlapi.com/profile.jpeg"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "description": "Status Code Jika Token Expired / Invalid",
                      "example": 108
                    },
                    "message": {
                      "type": "string",
                      "description": "Deskripsi Jika Token Expired / Invalid",
                      "example": "Token tidak valid atau kadaluwarsa"
                    },
                    "data": {
                      "type": "boolean",
                      "example": null
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/profile/update": {
      "put": {
        "tags": ["1. Module Membership"],
        "description": "<b>API Update Profile Private (Memerlukan Token untuk mengaksesnya)</b>\n\nDigunakan untuk mengupdate data profil User.\n\nKetentuan:\n\n- Service ini harus menggunakan <b>Bearer Token JWT</b> untuk mengaksesnya.\n- Tidak ada parameter email di query param URL ataupun request body, karena email diambil dari payload JWT yang diperoleh saat login.\n- Handling Response sesuai dokumentasi Response di bawah.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "first_name": {
                    "type": "string",
                    "description": "First Name dari user",
                    "example": "User Edited"
                  },
                  "last_name": {
                    "type": "string",
                    "description": "Last Name dari user",
                    "example": "Nutech Edited"
                  }
                },
                "required": ["first_name", "last_name"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Request Successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "description": "Internal Status Code",
                      "example": 0
                    },
                    "message": {
                      "type": "string",
                      "description": "Description for Internal Status Code",
                      "example": "Update Profile Berhasil"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "email": {
                          "type": "string",
                          "example": "user@nutech-integrasi.com"
                        },
                        "first_name": {
                          "type": "string",
                          "example": "User Edited"
                        },
                        "last_name": {
                          "type": "string",
                          "example": "Nutech Edited"
                        },
                        "profile_image": {
                          "type": "string",
                          "example": "https://yoururlapi.com/profile.jpeg"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "description": "Status Code Jika Token Expired / Invalid",
                      "example": 108
                    },
                    "message": {
                      "type": "string",
                      "description": "Deskripsi Jika Token Expired / Invalid",
                      "example": "Token tidak valid atau kadaluwarsa"
                    },
                    "data": {
                      "type": "boolean",
                      "example": null
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/profile/image": {
      "put": {
        "tags": ["1. Module Membership"],
        "description": "<b>API Upload Profile Image Private (Memerlukan Token untuk mengaksesnya)</b>\n\nDigunakan untuk mengupdate / upload gambar profil User.\n\nKetentuan:\n\n- Service ini harus menggunakan <b>Bearer Token JWT</b> untuk mengaksesnya.\n- Tidak ada parameter email di query param URL ataupun request body, karena email diambil dari payload JWT yang diperoleh saat login.\n- Format gambar yang diperbolehkan untuk diupload hanya JPEG dan PNG.\n- Handling Response sesuai dokumentasi Response di bawah.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "profile_image": {
                    "type": "string",
                    "format": "binary",
                    "description": "File gambar profil yang akan diupload (JPEG atau PNG)"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Request Successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "description": "Internal Status Code",
                      "example": 0
                    },
                    "message": {
                      "type": "string",
                      "description": "Description for Internal Status Code",
                      "example": "Update Profile Image Berhasil"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "email": {
                          "type": "string",
                          "example": "user@nutech-integrasi.com"
                        },
                        "first_name": {
                          "type": "string",
                          "example": "User Edited"
                        },
                        "last_name": {
                          "type": "string",
                          "example": "Nutech Edited"
                        },
                        "profile_image": {
                          "type": "string",
                          "example": "https://yoururlapi.com/profile.jpeg"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "description": "Internal Status Code",
                      "example": 102
                    },
                    "message": {
                      "type": "string",
                      "description": "Description for Internal Status Code",
                      "example": "Format Image tidak sesuai"
                    },
                    "data": {
                      "type": "boolean",
                      "example": null
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "description": "Status Code Jika Token Expired / Invalid",
                      "example": 108
                    },
                    "message": {
                      "type": "string",
                      "description": "Deskripsi Jika Token Expired / Invalid",
                      "example": "Token tidak valid atau kadaluwarsa"
                    },
                    "data": {
                      "type": "boolean",
                      "example": null
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/banner": {
      "get": {
        "tags": ["2. Module Information"],
        "description": "API Banner Public (Memerlukan Token untuk mengaksesnya)\n\nDigunakan untuk mendapatkan daftar banner.\n\nKetentuan:\n\n- Buat data daftar banner sesuai dengan dokumentasi Response di bawah, usahakan banner ini tidak di-hardcode, melainkan diambil dari database.\n- Tidak perlu membuat module CRUD untuk banner.\n- Handling Response sesuai dokumentasi Response di bawah.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Request Successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "description": "Internal Status Code",
                      "example": 0
                    },
                    "message": {
                      "type": "string",
                      "description": "Description for Internal Status Code",
                      "example": "Sukses"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "banner_name": {
                            "type": "string",
                            "example": "Banner 1"
                          },
                          "banner_image": {
                            "type": "string",
                            "example": "https://nutech-integrasi.app/dummy.jpg"
                          },
                          "description": {
                            "type": "string",
                            "example": "Lerem Ipsum Dolor sit amet"
                          }
                        }
                      },
                      "example": [
                        {
                          "banner_name": "Banner 1",
                          "banner_image": "https://nutech-integrasi.app/dummy.jpg",
                          "description": "Lerem Ipsum Dolor sit amet"
                        },
                        {
                          "banner_name": "Banner 2",
                          "banner_image": "https://nutech-integrasi.app/dummy.jpg",
                          "description": "Lerem Ipsum Dolor sit amet"
                        },
                        {
                          "banner_name": "Banner 3",
                          "banner_image": "https://nutech-integrasi.app/dummy.jpg",
                          "description": "Lerem Ipsum Dolor sit amet"
                        },
                        {
                          "banner_name": "Banner 4",
                          "banner_image": "https://nutech-integrasi.app/dummy.jpg",
                          "description": "Lerem Ipsum Dolor sit amet"
                        },
                        {
                          "banner_name": "Banner 5",
                          "banner_image": "https://nutech-integrasi.app/dummy.jpg",
                          "description": "Lerem Ipsum Dolor sit amet"
                        },
                        {
                          "banner_name": "Banner 6",
                          "banner_image": "https://nutech-integrasi.app/dummy.jpg",
                          "description": "Lerem Ipsum Dolor sit amet"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "description": "Status Code Jika Token Expired / Invalid",
                      "example": 108
                    },
                    "message": {
                      "type": "string",
                      "description": "Deskripsi Jika Token Expired / Invalid",
                      "example": "Token tidak valid atau kadaluwarsa"
                    },
                    "data": {
                      "type": "boolean",
                      "example": null
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/services": {
      "get": {
        "tags": ["2. Module Information"],
        "description": "API Services Private (Memerlukan Token untuk mengaksesnya)\n\nDigunakan untuk mendapatkan daftar Service/Layanan PPOB.\n\nKetentuan:\n\n- Buat data daftar Service/Layanan sesuai dengan dokumentasi Response di bawah, usahakan data ini tidak di-hardcode, melainkan diambil dari database.\n- Tidak perlu membuat module CRUD untuk Service/Layanan.\n- Handling Response sesuai dokumentasi Response di bawah.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Request Successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "description": "Internal Status Code",
                      "example": 0
                    },
                    "message": {
                      "type": "string",
                      "description": "Description for Internal Status Code",
                      "example": "Sukses"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "service_code": {
                            "type": "string",
                            "example": "PAJAK"
                          },
                          "service_name": {
                            "type": "string",
                            "example": "Pajak PBB"
                          },
                          "service_icon": {
                            "type": "string",
                            "example": "https://nutech-integrasi.app/dummy.jpg"
                          },
                          "service_tariff": {
                            "type": "integer",
                            "example": 40000
                          }
                        }
                      },
                      "example": [
                        {
                          "service_code": "PAJAK",
                          "service_name": "Pajak PBB",
                          "service_icon": "https://nutech-integrasi.app/dummy.jpg",
                          "service_tariff": 40000
                        },
                        {
                          "service_code": "PLN",
                          "service_name": "Listrik",
                          "service_icon": "https://nutech-integrasi.app/dummy.jpg",
                          "service_tariff": 10000
                        },
                        {
                          "service_code": "PDAM",
                          "service_name": "PDAM Berlangganan",
                          "service_icon": "https://nutech-integrasi.app/dummy.jpg",
                          "service_tariff": 40000
                        },
                        {
                          "service_code": "PULSA",
                          "service_name": "Pulsa",
                          "service_icon": "https://nutech-integrasi.app/dummy.jpg",
                          "service_tariff": 40000
                        },
                        {
                          "service_code": "PGN",
                          "service_name": "PGN Berlangganan",
                          "service_icon": "https://nutech-integrasi.app/dummy.jpg",
                          "service_tariff": 50000
                        },
                        {
                          "service_code": "MUSIK",
                          "service_name": "Musik Berlangganan",
                          "service_icon": "https://nutech-integrasi.app/dummy.jpg",
                          "service_tariff": 50000
                        },
                        {
                          "service_code": "TV",
                          "service_name": "TV Berlangganan",
                          "service_icon": "https://nutech-integrasi.app/dummy.jpg",
                          "service_tariff": 50000
                        },
                        {
                          "service_code": "PAKET_DATA",
                          "service_name": "Paket data",
                          "service_icon": "https://nutech-integrasi.app/dummy.jpg",
                          "service_tariff": 50000
                        },
                        {
                          "service_code": "VOUCHER_GAME",
                          "service_name": "Voucher Game",
                          "service_icon": "https://nutech-integrasi.app/dummy.jpg",
                          "service_tariff": 100000
                        },
                        {
                          "service_code": "VOUCHER_MAKANAN",
                          "service_name": "Voucher Makanan",
                          "service_icon": "https://nutech-integrasi.app/dummy.jpg",
                          "service_tariff": 100000
                        },
                        {
                          "service_code": "QURBAN",
                          "service_name": "Qurban",
                          "service_icon": "https://nutech-integrasi.app/dummy.jpg",
                          "service_tariff": 200000
                        },
                        {
                          "service_code": "ZAKAT",
                          "service_name": "Zakat",
                          "service_icon": "https://nutech-integrasi.app/dummy.jpg",
                          "service_tariff": 300000
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "description": "Status Code Jika Token Expired / Invalid",
                      "example": 108
                    },
                    "message": {
                      "type": "string",
                      "description": "Deskripsi Jika Token Expired / Invalid",
                      "example": "Token tidak valid atau kadaluwarsa"
                    },
                    "data": {
                      "type": "boolean",
                      "example": null
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/balance": {
      "get": {
        "tags": ["3. Module Transaction"],
        "description": "API Balance Private (Memerlukan Token untuk mengaksesnya)\n\nDigunakan untuk mendapatkan informasi balance/saldo terakhir dari User.\n\nKetentuan:\n\n- Service ini harus menggunakan Bearer Token JWT untuk mengaksesnya.\n- Tidak ada parameter email di query param URL ataupun request body, karena email diambil dari payload JWT yang diperoleh saat login.\n- Handling Response sesuai dokumentasi Response di bawah.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Get Balance / Saldo Berhasil",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "description": "Internal Status Code",
                      "example": 0
                    },
                    "message": {
                      "type": "string",
                      "description": "Description for Internal Status Code",
                      "example": "Get Balance berhasil"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "balance": {
                          "type": "integer",
                          "example": "100000"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "description": "Status Code Jika Token Expired / Invalid",
                      "example": 108
                    },
                    "message": {
                      "type": "string",
                      "description": "Deskripsi Jika Token Expired / Invalid",
                      "example": "Token tidak valid atau kadaluwarsa"
                    },
                    "data": {
                      "type": "boolean",
                      "example": null
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/topup": {
      "post": {
        "tags": ["3. Module Transaction"],
        "description": "API Topup Private (Memerlukan Token untuk mengaksesnya)\n\nDigunakan untuk melakukan top up balance/saldo dari User.\n\nKetentuan:\n\n- Service ini harus menggunakan Bearer Token JWT untuk mengaksesnya.\n- Tidak ada parameter email di query param URL ataupun request body, karena email diambil dari payload JWT yang diperoleh saat login.\n- Setiap kali melakukan Top Up, balance/saldo User akan otomatis bertambah.\n- Parameter amount hanya boleh berupa angka dan tidak boleh lebih kecil dari 0.\n- Saat Top Up, set transaction_type di database menjadi TOPUP.\n- Handling Response sesuai dokumentasi Response di bawah.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "top_up_amount": {
                    "type": "integer",
                    "description": "Top Up Amount untuk update balance",
                    "example": "1000000"
                  }
                },
                "required": ["top_up_amount"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Request Successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "description": "Internal Status Code",
                      "example": 0
                    },
                    "message": {
                      "type": "string",
                      "description": "Description for Internal Status Code",
                      "example": "Top Up Balance berhasil"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "balance": {
                          "type": "integer",
                          "example": "200000"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "description": "Internal Status Code",
                      "example": 102
                    },
                    "message": {
                      "type": "string",
                      "description": "Description for Internal Status Code",
                      "example": "Parameter amount hanya boleh angka dan tidak boleh lebih kecil dari 0"
                    },
                    "data": {
                      "type": "boolean",
                      "example": null
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "description": "Status Code Jika Token Expired / Invalid",
                      "example": 108
                    },
                    "message": {
                      "type": "string",
                      "description": "Deskripsi Jika Token Expired / Invalid",
                      "example": "Token tidak valid atau kadaluwarsa"
                    },
                    "data": {
                      "type": "boolean",
                      "example": null
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/transaction": {
      "post": {
        "tags": ["3. Module Transaction"],
        "description": "API Transaction Private (Memerlukan Token untuk mengaksesnya)\n\nDigunakan untuk melakukan transaksi dari services/layanan yang tersedia.\n\nKetentuan:\n\n- Service ini harus menggunakan Bearer Token JWT untuk mengaksesnya.\n- Tidak ada parameter email di query param URL ataupun request body, karena email diambil dari payload JWT yang diperoleh saat login.\n- Setiap kali melakukan transaksi, harus dipastikan balance/saldo mencukupi.\n- Saat transaksi, set transaction_type di database menjadi PAYMENT.\n- Handling Response sesuai dokumentasi Response di bawah.\n- Format invoice_number dapat digenerate secara bebas.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "service_code": {
                    "type": "string",
                    "description": "Service Code yang didapatkan dari API Services",
                    "example": "PLN"
                  }
                },
                "required": ["service_code"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Transaksi Berhasil",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "description": "Internal Status Code",
                      "example": 0
                    },
                    "message": {
                      "type": "string",
                      "description": "Description for Internal Status Code",
                      "example": "Transaksi Berhasil"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "invoice_number": {
                          "type": "string",
                          "example": "INV17082023-001"
                        },
                        "service_code": {
                          "type": "string",
                          "example": "PLN_PRABAYAR"
                        },
                        "service_name": {
                          "type": "string",
                          "example": "PLN Prabayar"
                        },
                        "transaction_type": {
                          "type": "string",
                          "example": "PAYMENT"
                        },
                        "total_amount": {
                          "type": "integer",
                          "example": 10000
                        },
                        "created_on": {
                          "type": "string",
                          "example": "2023-08-17T10:10:10.000Z"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "description": "Internal Status Code",
                      "example": 102
                    },
                    "message": {
                      "type": "string",
                      "description": "Description for Internal Status Code",
                      "example": "Service ataus Layanan tidak ditemukan"
                    },
                    "data": {
                      "type": "boolean",
                      "example": null
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "description": "Status Code Jika Token Expired / Invalid",
                      "example": 108
                    },
                    "message": {
                      "type": "string",
                      "description": "Deskripsi Jika Token Expired / Invalid",
                      "example": "Token tidak valid atau kadaluwarsa"
                    },
                    "data": {
                      "type": "boolean",
                      "example": null
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/transaction/history": {
      "get": {
        "tags": ["3. Module Transaction"],
        "description": "API History Private (Memerlukan Token untuk mengaksesnya)\n\nDigunakan untuk mendapatkan informasi riwayat transaksi.\n\nKetentuan:\n\n- Service ini harus menggunakan Bearer Token JWT untuk mengaksesnya.\n- Tidak ada parameter email di query param URL ataupun request body, karena email diambil dari payload JWT yang diperoleh saat login.\n- Terdapat parameter limit yang bersifat opsional. Jika limit tidak dikirim, maka tampilkan semua data.\n- Data diurutkan dari yang paling baru berdasarkan transaction date (created_on).\n- Handling Response sesuai dokumentasi Response di bawah.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "example": 0
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "example": 3
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Get History Transaksi berhasil",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "description": "Status Code Berhasil Get Balance",
                      "example": 0
                    },
                    "message": {
                      "type": "string",
                      "description": "Deskripsi berhasil Get Balance",
                      "example": "Get History Berhasil"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "offset": {
                          "type": "integer",
                          "example": 0
                        },
                        "limit": {
                          "type": "integer",
                          "example": 3
                        },
                        "records": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "invoice_number": {
                                "type": "string",
                                "example": "INV17082023-001"
                              },
                              "transaction_type": {
                                "type": "string",
                                "example": "TOPUP"
                              },
                              "description": {
                                "type": "string",
                                "example": "Top Up balance"
                              },
                              "total_amount": {
                                "type": "integer",
                                "example": 100000
                              },
                              "created_on": {
                                "type": "string",
                                "format": "date-time",
                                "example": "2023-08-17T10:10:10.000Z"
                              }
                            }
                          },
                          "example": [
                            {
                              "invoice_number": "INV17082023-001",
                              "transaction_type": "TOPUP",
                              "description": "Top Up balance",
                              "total_amount": 100000,
                              "created_on": "2023-08-17T10:10:10.000Z"
                            },
                            {
                              "invoice_number": "INV17082023-002",
                              "transaction_type": "PAYMENT",
                              "description": "PLN Pascabayar",
                              "total_amount": 10000,
                              "created_on": "2023-08-17T11:10:10.000Z"
                            },
                            {
                              "invoice_number": "INV17082023-003",
                              "transaction_type": "PAYMENT",
                              "description": "Pulsa Indosat",
                              "total_amount": 40000,
                              "created_on": "2023-08-17T12:10:10.000Z"
                            }
                          ]
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "description": "Status Code Jika Token Expired / Invalid",
                      "example": 108
                    },
                    "message": {
                      "type": "string",
                      "description": "Deskripsi Jika Token Expired / Invalid",
                      "example": "Token tidak valid atau kadaluwarsa"
                    },
                    "data": {
                      "type": "boolean",
                      "example": null
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}
